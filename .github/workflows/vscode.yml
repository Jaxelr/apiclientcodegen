name: VS Code

on:
  push:
    branches: [main]
    paths:
      - 'src/VSCode/**'
    tags:
      - 'vscode-v*'
  pull_request:
    branches: [main]
    paths:
      - 'src/VSCode/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'src/VSCode/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd src/VSCode
        npm ci
    
    - name: Lint
      run: |
        cd src/VSCode
        npm run lint
    
    - name: Build
      run: |
        cd src/VSCode
        npm run compile
    
    - name: Package Extension
      run: |
        cd src/VSCode
        npm run package
        npm run vsix
    
    - name: Upload VSIX
      uses: actions/upload-artifact@v3
      with:
        name: VSCode-Extension
        path: src/VSCode/*.vsix

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/vscode-v')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download VSIX
      uses: actions/download-artifact@v3
      with:
        name: VSCode-Extension
        path: vsix
        
    - name: Get Tag Version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/vscode-v}" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: VS Code Extension ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vsix/rest-api-client-code-generator-*.vsix
        asset_name: rest-api-client-code-generator-${{ steps.get_version.outputs.VERSION }}.vsix
        asset_content_type: application/octet-stream
